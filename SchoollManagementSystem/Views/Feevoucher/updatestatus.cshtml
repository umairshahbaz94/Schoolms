@model SMS.Entities.StudentFeesStatus

@{
    ViewBag.Title = "updatestatus";
    Layout = null;
}

<h2></h2>

<form method="post" id="updateform">

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="alert alert-primary" role="alert">
            updatestatus
        </div>



        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
       
        <div class="form-group">
            @Html.HiddenFor(model => model.Accountnosharedv, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Accountnosharedv, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Accountnosharedv, "", new { @class = "text-danger" })
            </div>



            <div class="form-group">
                @Html.HiddenFor(model => model.localvochardiscount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.localvochardiscount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.localvochardiscount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.HiddenFor(model => model.Svochardiscount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.Svochardiscount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Svochardiscount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.HiddenFor(model => model.StudentID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.StudentID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.HiddenFor(model => model.classID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.classID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.classID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.HiddenFor(model => model.Section, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.Section, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.HiddenFor(model => model.term, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.term, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.term, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.HiddenFor(model => model.session, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.session, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.session, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.HiddenFor(model => model.VoucherType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.VoucherType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VoucherType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.HiddenFor(model => model.totalAmtsharedv, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.totalAmtsharedv, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.totalAmtsharedv, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.status, new SelectList(ViewBag.statuses, "ID", "name", Model.status), "Select Status", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.VoucherNO, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VoucherNO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VoucherNO, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">v1DepositeDate</label>
                @*@Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.VoucherNOS, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VoucherNOS, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VoucherNOS, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">v2DepositeDate</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DueDatev, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.DueDatev, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group">
                @Html.HiddenFor(model => model.RecevieAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.RecevieAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RecevieAmount, "", new { @class = "text-danger" })
                </div>
            </div>
            <input type="hidden" value="" id="picidssave" name="url" />
            <div class="form-group">
                @Html.LabelFor(model => model.SStatusReview, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SStatusReview, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<input type="hidden" name="SStatus" value=@Model.SStatus />*@
            <div class="form-group">
                @Html.HiddenFor(model => model.pid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.pid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.pid, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.HiddenFor(model => model.localtotalamount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.localtotalamount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.localtotalamount, "", new { @class = "text-danger" })
                </div>
            </div>




            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="button" class="btn btn-primary update">Save</button>

                </div>
            </div>
        </div>
        <div class="form-horizontal">
            <div class="alert alert-primary" id="done" role="alert">

            </div>
        </div>

</form>





<script>

    $(".update").click(function () {
        url = document.getElementById("picidssave").value;
        debugger;
        $.ajax({
            url: "/Feevoucher/updatestatus",
            type: "post",
            data: $("#updateform").serialize()


        }).done(function (response) {

            debugger;

            if (response.success) {

                $("#done").html(response.Message);
                window.location.reload();
            }
            else {
                $("#done").html(response.Message);
                window.location.reload();
            }

        });

    });

</script>


